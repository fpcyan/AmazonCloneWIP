c
@shopping_cart_items
c
@shopping_cart_items
c
shopping_cart_items.first.product.images
shopping_cart_items.product
shopping_cart_items.product.images
shopping_cart_items
c
shopping_cart_items.includes(product: :images).load
shopping_cart_items.includes(product: :images)
shopping_cart_items
c
user.shopping_cart_items
user
@shopping_cart_items
c
full_name
id
c
quit
        )
          rand(0...100)
          Faker::Lorem.paragraph,
          Faker::Commerce.price * 100,
          name,
prod = category.create_product(
c
end
(
)
"
)
        )
          rand(0...100)
          Faker::Lorem.paragraph,
          Faker::Commerce.price * 100,
          name,
prod = category.create_product(
name
category
product
prod
c
product.errors.empty?
product.errors
product
c
item["product_id"]
s
items
c
item[:product_id]
item["product_id"]
product
item
s
c
n
items
Stripe::Customer.retrieve("cus_7T2UpbPyMoMSBe")
Stripe::Customer.all
Stripe::Customer.retrieve("ch_17E6PiIDQ4ov40rg2H0s8dFy")
Stripe::Customer.retrieve(ch_17E6PiIDQ4ov40rg2H0s8dFy)
Customer.retrieve(ch_17E6PiIDQ4ov40rg2H0s8dFy)
charge
customer.default_source
customer["data"]
customer[:data]
customer.data
customer[:card]
customer.card
customer
charge[:brand]
charge.brand
charge
c
n
s
params[:amount]
c
params
c
@product
c
Product.includes(:images).find(params[:id]).in_stock?
Product.includes(:images).find(params[:id])
@product
c
n
c
params[:token][:id]
params[:token]
params[:token][:token]
params[:email]
params[:token][:email]
params[:token][:stripeEmail]
params[:stripeEmail]
c
@order[:card][:brand]
@order[:card]
@order[:brand]
JSON.parse(@order)
@order
c
order
@order
c
@order
c
user
c
@user.shopping_cart_items
@user
c
current_user
@user
@user.shopping_cart_items
n
@user.shopping_cart_items
c
@user
n
current_user.shopping_cart_items
current_user
c
current_user
@current_user
@user
c
n
@user.id
@iser.id
@user = current_user
current_user.id
current_user
c
session[:session_token]
c
current_user = User.find_by(session_token: session[:session_token])
n
session[:session_token]
session
c
session[:session_token]
session
params
c
params
c
params
c
params
session[:session_token]
c
current_user = User.find_by(session_token: session[:session_token])
session[:session_token]
c
session[:session_token]
c
session[:session_token]
session
c
params
session[:session_token]
session[:session_token] = user
c
user
c
session[:session_token]
c
item
c
self.shopping_cart_items.where(product_id: item["product_id"]).length
!!self.shopping_cart_items.where(product_id: item["product_id"])
self.shopping_cart_items.where(product_id: item["product_id"])
self.shopping_cart_items
item
!self.shopping_cart_items.where(product_id: item["product_id"])
!self.shopping_cart_items.where(product_id: item["product_id"]
item
n
s
item
n
s
n
s
item
n
!!self.shopping_cart_items.where(product_id: item["product_id"])
!self.shopping_cart_items.where(product_id: item["product_id"])
self.shopping_cart_items.where(product_id: item["product_id"])
self.shopping_cart_items
item["product_id"]
item
!self.shopping_cart_items.where(product_id: item["product_id"]
items
exit
params
exit
params[:shopping_cart_items].first
params[:shopping_cart_items][0]
params[:shopping_cart_items].length
params[shopping_cart_items]
params[shopping_cart_items].length
params[shopping_cart_items]length
params.shopping_cart_items.length
params[:shopping_cart_items]
params
exit
params
exit
params
c
n
c
n
quit
@user
n
   13:     )
   12:       params[:password]
   11:       params[:email],
@user = User.find_by_credentials(
c
n
params
quit
params[:email]
params
exit
c
exit
self
product.images
product
image
n
Image.find_by(image_file_name: self.image_file_name)
self.image_file_name
self
s
image.image_file_name
image
exit
c
n
error
n
image_file
main
exit
name
prod
